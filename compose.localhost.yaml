name: tournament
services:
  traefik:
    image: traefik:v3.5.2
    hostname: proxy.localhost
    security_opt:
      - no-new-privileges:true
    command:
      - "--api.insecure=false"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.directory=/etc/traefik/dynamic"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--entryPoints.websecure.http.tls=true"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./proxy/certs:/certs:rw
      - ./proxy/dynamic:/etc/traefik/dynamic:rw
    ports:
      - 80:80
      - 443:443
      # - 8080:8080
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`dashboard.localhost`)"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.tls=true"
      - com.centurylinklabs.watchtower.enable=true
  api:
    build: api/.
    restart: unless-stopped
    environment:
      - ENDPOINT=http://mocks:4010/v1
      - APIPORT=3000
      - HOST=tournamentapi.localhost
      - APIVERSION=v1
      - ENV=sb
    expose:
      - 3000
    labels:
      - traefik.enable=true
      - traefik.http.routers.api.rule=Host("api.localhost")
      - com.centurylinklabs.watchtower.enable=true
  watchtower:
    image: containrrr/watchtower:latest
    command:
      - "--label-enable"
      - "--interval"
      - "30"
      - "--rolling-restart"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - com.centurylinklabs.watchtower.enable=true
  mocks:
    # build: mock/.
    image: stoplight/prism:latest
    restart: unless-stopped
    labels:
      - com.centurylinklabs.watchtower.enable=true
    expose:
      - 4010
    ports:
      - 4010:4010
    depends_on:
      api:
        condition: service_started
    command: 'mock -h 0.0.0.0 http://api:3000/v1/docs/json -p 4010'
  keycloak_web:
    image: quay.io/keycloak/keycloak:latest
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloakdb:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
      KC_HOSTNAME: auth.localhost
      KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_LOG_LEVEL: info
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: start-dev
    depends_on:
      - keycloakdb
    expose:
      - 8080
    ports:
      - 8080:8080
    labels:
      - traefik.enable=true
      - traefik.http.routers.keycloak_web.rule=Host("auth.localhost")
      - com.centurylinklabs.watchtower.enable=true
  keycloakdb:
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    labels:
      - com.centurylinklabs.watchtower.enable=true
volumes:
  postgres_data: